# See this link: https://www.hugeserver.com/kb/how-to-config-openvpn-ubuntu-debian/
# or this: https://github.com/Angristan/OpenVPN-install

# On Linux Clients, edit the .ovpn configuration file and add...
up /etc/openvpn/update-resolv-conf
down /etc/openvpn/update-resolv-conf
# Otherwise, DNS options will not be updated.

# add to server.conf file
log-append {somelogfilename}.log
push "route 192.168.1.0 255.255.255.0"     <--- for this to work, need to add iptables routing information (see line 45)

# For a non-gateway/DNS connection
# Within the Client.config add/edit  --  Then set up routing as necessary
pull-filter ignore "dhcp-option"
pull-filter ignore "redirect-gateway def1 bypass-dhcp"


# Unecessary to do, since we are using certificates/etc.... (but useful for ssh protection)
# Security hardening: Fail2Ban -- prevent brute force guesses against server
sudo apt install fail2ban
cd /etc/fail2ban
sudo cp jail.conf jail.local
# change max retry settings

# Then this: https://www.fail2ban.org/wiki/index.php/HOWTO_fail2ban_with_OpenVPN  (over zealous security measure? .... yes....)
# update/fix the 'configuration fragment' to include location of {somelogfilename}.log
# Added two lines to filter.d/{myfilterfile}
fileregex = ^ <HOST>:\d+ Fatal TLS error
            ^ <HOST>:\d+ TLS Error: cannot locate HMAC
# To be experimented with...

# Watch fail2ban log: /var/log/fail2ban.log

# Check current bans
iptables -L -n | less

# Clear a ban
fail2ban-client set {jail} unbanip {ipaddress}




### I need to do some more studying on this ###
# iptables routing for openvpn (access to network computers)
iptables -t nat -A POSTROUTING -o {localnetworkadpter} -j MASQUERADE
iptables -A FORWARD -i {localnetworkadpter} -o tun0 -m state --state RELATED,ESTABLISHED -j ACCEPT
iptables -A FORWARD -i tun0 -o {localnetworkadpter} -j ACCEPT

# Allow local lan to access vpn clients
iptables -t nat -A POSTROUTING -s {source network}/24 -d {destination network}/24  -j MASQUERADE


# To be pursed later/inthefuture -- WireGuard
